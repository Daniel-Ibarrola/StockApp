{"version":3,"sources":["Components/HeaderComponent.js","Components/LineGraphComponent.js","Components/TimeLineComponent.js","Components/ChipComponent.js","Components/NewsfeedComponent.js","Shared/firebase.js","Components/StatsRowComponent.js","Components/StatsComponent.js","Components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","width","alt","Collapse","isOpen","navbar","Nav","NavItem","NavLink","to","Component","LineGraphComponent","useState","graphData","setGraphData","useEffect","data","value","Math","random","EMA","i","date","Date","setHours","setDate","push","x","y","createMockData","datasets","type","backgroundColor","borderColor","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","options","maintainAspectRatio","legend","display","tooltips","mode","intersect","scales","xAxes","time","format","tooltipFormat","ticks","yAxes","elements","point","radius","Timeline","aria-pressed","Chip","image","height","label","NewsfeedComponent","popularTopics","map","topic","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","StatsRow","percentage","price","openPrice","collection","where","name","get","then","querySnapshot","empty","console","log","add","ticker","shares","forEach","doc","id","update","Number","style","color","toFixed","Stats","stockData","setstockData","myStocks","setmyStocks","getStocksData","stock","axios","catch","error","message","tempStocksData","promises","onSnapshot","snapshot","tempData","docs","res","info","Promise","all","o","c","MainComponent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa00c62b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, NavLink } from 'reactstrap';\r\nimport './Styles/HeaderComponent.css'\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n\r\n            <Navbar dark expand='md'>\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand href=\"/\">\r\n                        <img src='assets/images/robinhood.svg' width={35} alt=\"Stocks App\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar className=\"justify-content-end\">\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/'>Free Stocks</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/'>Portfolio</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/'>Cash</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/'>Messages</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/'>Account</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header\r\n","import React, { useEffect, useState} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './Styles/LineGraphComponent.css'\r\n\r\nfunction LineGraphComponent() {\r\n    const [ graphData, setGraphData ] = useState([]);\r\n    \r\n    const createMockData = () => {\r\n        let data = [];\r\n        let value = Math.random()*100;\r\n        let EMA = 0\r\n        for(var i = 0; i < 366; i++) {\r\n            let date = new Date();\r\n            date.setHours(0,0,0,0);\r\n            date.setDate(i);\r\n            // value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\r\n            EMA = (value*0.0546) + EMA*(1-0.0546);\r\n            value = Math.random()*50;\r\n            data.push({x: date, y: EMA});\r\n        }\r\n        setGraphData(data);\r\n    }\r\n    \r\n\r\n    useEffect(()=> {\r\n        createMockData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='linegraph'>\r\n            <Line \r\n                data={{\r\n                    datasets: [\r\n                        {\r\n                            type: \"line\",\r\n                            data: graphData,\r\n                            backgroundColor: \"black\",\r\n                            borderColor: \"#5AC53B\",\r\n                            borderWidth: 2,\r\n                            pointBorderColor: 'rgba(0, 0, 0 0)',\r\n                            pointBackgroundColor: 'rgba(0, 0, 0 0)',\r\n                            pointHoverBackgroundColor: \"#5AC53B\",\r\n                            pointHoverBorderColor: '#000000',\r\n                            pointHoverBorderWidth: 4,\r\n                            pointHoverRadius: 6\r\n                        }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        mode: \"index\",\r\n                        intersect: false\r\n                    },\r\n                    scales: {\r\n                        xAxes: [\r\n                            {\r\n                                type: \"time\",\r\n                                time: {\r\n                                    format: \"MM/DD/YY\",\r\n                                    tooltipFormat: \"ll\",\r\n                                },\r\n                                ticks: {\r\n                                    display: false\r\n                                }\r\n                            }\r\n                        ],\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                display: false\r\n                            }\r\n                        }]\r\n                    },\r\n                   elements: {\r\n                       point: {\r\n                           radius: 0\r\n                       }\r\n                   }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraphComponent\r\n","import React from 'react';\r\nimport './Styles/TimeLineComponent.css'\r\n\r\nfunction Timeline() {\r\n    return (\r\n        <div className=\"container timeline\">\r\n            <div className=\"row\">\r\n                <button type=\"button\" className=\"btn btn-link\">LIVE</button>\r\n                <button type=\"button\" className=\"btn btn-link\">1D</button>\r\n                <button type=\"button\" className=\"btn btn-link\">1W</button>\r\n                <button type=\"button\" className=\"btn btn-link\">3M</button>\r\n                <button type=\"button\" className=\"btn btn-link active\" aria-pressed=\"true\">1Y</button>\r\n                <button type=\"button\" className=\"btn btn-link\">ALL</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timeline\r\n","import React from 'react';\r\nimport './Styles/ChipComponent.css'\r\n\r\nfunction Chip(props) {\r\n    return (\r\n        <div>\r\n            <div className='chip'>\r\n                <div className=\"chip-avatar\">\r\n                    <img src={props.image} alt={''} width={10} height={10}/>\r\n                </div>\r\n                <div className=\"chip-label\">\r\n                    <span>{props.label}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chip\r\n","import React, { useState } from 'react';\r\nimport LineGraph from './LineGraphComponent';\r\nimport TimeLine from './TimeLineComponent';\r\nimport Chip from './ChipComponent';\r\nimport './Styles/NewsfeedComponent.css';\r\n\r\n\r\nfunction NewsfeedComponent() {\r\n\r\n    const [popularTopics, setTopics] = useState([ \r\n        \"Technology\",\r\n        \"Top Movies\",\r\n        \"Upcoming Earnings\",\r\n        \"Crypto\",\r\n        \"Cannabis\",\r\n        \"Healthcare Supplies\",\r\n        \"Index ETFs\",\r\n        \"Technology\",\r\n        \"China\",\r\n        \"Pharma\",\r\n    ]);\r\n\r\n    return (\r\n            <div className=\"col-12 col-md-8\">\r\n                <div className=\"newsfeed-portfolio\">\r\n                    <h1>$114,600.84</h1>\r\n                    <p>+$44.63 (+0.04%) Today</p>\r\n                </div>\r\n                <LineGraph />\r\n                <TimeLine />\r\n                <div className=\"newsfeed-buying-section\">\r\n                        <h4> Buying Power </h4>\r\n                        <h4> $4.11</h4>\r\n                    </div>\r\n                    <div className='newsfeed-market-section'>\r\n                        <div className='newsfeed-market-box'>\r\n                            <p>Cash Management</p>\r\n                            <h2>Get a debit card and start earning interest on your cash</h2>\r\n                            <a href=\"/\">Get Cash Management</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"newsfeed-popularlists-section\">\r\n                        <div className=\"newsfeed-popularlists-intro\">\r\n                            <h1>Popular lists</h1>\r\n                            <p>Show More</p>\r\n                        </div>\r\n                        <div className=\"newsfeed-popularlists-badges\">\r\n                            {popularTopics.map((topic) => (\r\n                                <Chip                        \r\n                                    label={topic}\r\n                                    image={`https://avatars.dicebear.com/api/human/${topic}.svg`}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default NewsfeedComponent\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC6dz0t7wyLPydbmMucsFYCsUow865nP6w\",\r\n    authDomain: \"robinhood-c1b9d.firebaseapp.com\",\r\n    databaseURL: \"https://robinhood-c1b9d.firebaseio.com\",\r\n    projectId: \"robinhood-c1b9d\",\r\n    storageBucket: \"robinhood-c1b9d.appspot.com\",\r\n    messagingSenderId: \"809936148677\",\r\n    appId: \"1:809936148677:web:c21d4a384588a4a22ab8ac\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  export { db };","import React from 'react';\r\nimport './Styles/StatsRowComponent.css';\r\nimport { db } from '../Shared/firebase';\r\n\r\n\r\nfunction StatsRow(props) {\r\n\r\n    const percentage = ((props.price - props.openPrice)/props.openPrice) * 100\r\n\r\n    const buyStock = () => {\r\n        db\r\n            .collection('myStocks')\r\n            .where(\"ticker\", \"==\", props.name)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                if(!querySnapshot.empty){\r\n                    // update the record\r\n                    \r\n                    querySnapshot.forEach(function(doc) {\r\n                        db.collection('myStocks')\r\n                        .doc(doc.id)\r\n                        .update({\r\n                            shares: doc.data().shares += 1\r\n                        })\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                    });\r\n                } else {\r\n                    // Add a new record\r\n                    console.log(\"Not available\")\r\n                    db.collection('myStocks')\r\n                    .add({\r\n                        ticker: props.name,\r\n                        shares: 1\r\n                    })\r\n                }\r\n               \r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"stats-container stock-button\" onClick={buyStock}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4 stock-name\">\r\n                    <h4>{props.name}</h4>\r\n                    <p>{props.shares &&\r\n                        (props.shares + \" shares\")}</p>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                {Number(percentage) > 0 \r\n                    ?  <img src=\"assets/images/stock.svg\" height={16}/>\r\n                    :  <img src=\"assets/images/stocks_down.svg\" height={16}/>\r\n                    }       \r\n                </div>\r\n                <div className=\"col-4 stock-numbers\">\r\n                    <p className='row-price'>${props.price}</p>\r\n                    {/* Render percentage color based on sign */}\r\n                    {Number(percentage) > 0 \r\n                    ?  <p className='row-percentage' style={{color:\"#5ac53b\"}}> +{Number(percentage).toFixed(2)}%</p> \r\n                    :  <p className='row-percentage' style={{color:\"red\"}}> {Number(percentage).toFixed(2)}%</p>\r\n                    }         \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsRow\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { db } from '../Shared/firebase';\r\nimport StatsRow from './StatsRowComponent';\r\nimport './Styles/StatsComponent.css';\r\n\r\n\r\nconst TOKEN = 'bv2rcgf48v6ru7sfc60g';\r\nconst BASE_URL = 'https://finnhub.io/api/v1/quote';\r\n\r\nfunction Stats() {\r\n\r\n    const [ stockData, setstockData ] = useState([]);\r\n    const [ myStocks, setmyStocks ] = useState([])\r\n\r\n    const getMyStocks = () => {\r\n        db\r\n        .collection('myStocks')\r\n        .onSnapshot(snapshot => {\r\n            let promises = [];\r\n            let tempData = [];\r\n            snapshot.docs.map((doc) => {\r\n\r\n              console.log(doc.data());  \r\n              promises.push(getStocksData(doc.data().ticker)\r\n              .then(res => {\r\n                tempData.push({\r\n                  id: doc.id,\r\n                  data: doc.data(),\r\n                  info: res.data\r\n                })\r\n              })\r\n            )})\r\n            Promise.all(promises).then(()=>{\r\n                console.log(tempData);\r\n              setmyStocks(tempData);\r\n            })\r\n        })\r\n      }\r\n\r\n    const getStocksData = (stock) => {\r\n        return axios\r\n            .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\r\n            .catch((error) => {\r\n                console.error(\"Error\", error.message);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tempStocksData = []\r\n        const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\r\n\r\n        let promises = [];\r\n        getMyStocks()\r\n        stocksList.map((stock) => {\r\n            promises.push(\r\n                getStocksData(stock)\r\n                .then((res) => {\r\n                tempStocksData.push({\r\n                    name: stock,\r\n                    ...res.data\r\n                });\r\n            })\r\n        )\r\n        });\r\n\r\n        Promise.all(promises).then(()=>{\r\n            setstockData(tempStocksData);\r\n            // console.log(tempStocksData)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n            <div className=\"col-12 col-md-4\">\r\n                <div className=\"container stats\">\r\n                    <div className=\"row\">\r\n                        <div className=\"stats-header col-12\">\r\n                            <p>Stocks</p> \r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {myStocks.map((stock) => (\r\n                                <StatsRow\r\n                                    key={stock.data.ticker}\r\n                                    name={stock.data.ticker}\r\n                                    openPrice={stock.info.o}\r\n                                    shares={stock.data.shares}\r\n                                    price={stock.info.c}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"stats-header stats-lists col-12\">\r\n                            <p>Lists</p> \r\n                        </div>\r\n                        <div className=\"stats-content col-12\">\r\n                                {stockData.map((stock) => (\r\n                                    <StatsRow\r\n                                        key={stock.name}\r\n                                        name={stock.name}\r\n                                        openPrice={stock.o}\r\n                                        price={stock.c}\r\n                                    />\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react';\r\nimport Header from './HeaderComponent';\r\nimport './Styles/MainComponent.css'\r\nimport NewsfeedComponent from './NewsfeedComponent';\r\nimport Stats from './StatsComponent'\r\n\r\nfunction MainComponent() {\r\n    return (\r\n        <div className=\"main-component\">\r\n            <Header />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <NewsfeedComponent />\r\n                    <Stats />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComponent\r\n","import './App.css';\nimport MainComponent from './Components/MainComponent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}